{"ts":1390631736479,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var nohm = require(__dirname+'/../lib/nohm').Nohm;\nvar args = require(__dirname+'/testArgs.js');\nvar redis = args.redis;\nvar h = require(__dirname+'/helper.js');\nvar vm = require('vm');\n\nnohm.setExtraValidations(__dirname + '/custom_validations.js');\n\nnohm.model('UserConnectMockup', {\n  properties: {\n    name: {\n      type: 'string',\n      defaultValue: 'testName',\n      validations: [\n        'notEmpty',\n        ['length', {\n            min: 2\n          }\n        ]\n      ]\n    },\n    customValidationFile: {\n      type: 'string',\n      defaultValue: 'customValidationFile',\n      validations: [\n        'customValidationFile'\n      ]\n    },\n    customValidationFileTimesTwo: {\n      type: 'string',\n      defaultValue: 'customValidationFileTimesTwo',\n      validations: [\n        'customValidationFileTimesTwo'\n      ]\n    },\n    excludedProperty: {\n      type: 'string',\n      defaultValue: 'asd',\n      validations: [\n        'notEmpty'\n      ]\n    },\n    excludedValidation: {\n      type: 'string',\n      defaultValue: 'asd',\n      validations: [\n        'notEmpty',\n        ['length', {\n            min: 2\n          }\n        ]\n      ]\n    }\n  }\n});\nnohm.model('ExcludedConnectMockup', {\n  properties: {\n    name: {\n      type: 'string',\n      defaultValue: '',\n      validations: [\n        'notEmpty'\n      ]\n    }\n  }\n});\n\nvar setup = function (t, expected, options, callback) {\n  t.expect(3+expected);\n  var length = 0;\n  var headersSet = false;\n  var namespace = (options && options.namespace) ? options.namespace : 'nohmValidations';\n  var dummyRes = {\n    writeHead: function (status, headers) {\n      t.ok(headers['Content-Length'] > 0, 'Header Content-Length was 0');\n      length = headers['Content-Length'];\n      headersSet = true;\n    },\n    end: function (str) {\n      var sandbox = {\n        window: {},\n        console: console\n      };\n      t.ok(headersSet, 'Headers were not set before res.end() was called');\n      t.same(length, str.length, 'Content-Length was not equal to the actual body length');\n      try {\n        \n        // fixes the problem that in the browser we'd have globals automatically in window, here we don't.\n        str = str.replace(/(typeof\\(exports\\) === 'undefined')/, \n                          '(window[nohmValidationsNamespaceName] = '+namespace+') && $1');\n      \n        vm.runInNewContext(str, sandbox, 'validations.vm');\n      } catch (e) {\n        console.log(str);\n        console.log('Parsing the javascript failed: '+e.message);\n        console.log(e.stack);\n        t.done();\n      }\n      callback(sandbox, str);\n    }\n  };\n  \n  var url = (options && options.url) ? options.url : '/nohmValidations.js';\n  \n  nohm.connect(options)({url: url }, dummyRes, function () {\n    t.ok(false, 'Connect middleware called next with valid url.');\n    t.done();\n  });\n};\n\n\nexports.connect = {\n  \n  setUp: function (next) {\n    if ( ! nohm.client) {\n      nohm.setClient(redis);\n    }\n    next();\n  },\n  tearDown: function (next) {\n    h.cleanUp(redis, args.prefix, next);\n  },\n  \n  \n  connectNoOptions: function (t) {\n  \n    setup(t, 2, undefined, function (sandbox, str) {\n      var val = sandbox.nohmValidations.models.UserConnectMockup;\n      t.ok(val.name.indexOf('notEmpty') === 0, 'UserConnectMockup did not have the proper validations');\n      t.same(val.name[1], [\n        'length', {\n            min: 2\n          }\n        ], 'UserConnectMockup did not have the proper validations');\n      t.done();\n    });\n  },\n\n  connectValidate: function (t) {\n      \n    setup(t, 2, undefined, function (sandbox) {\n      var val = sandbox.nohmValidations.validate;\n      val('UserConnectMockup', {name: 'asd', excludedProperty: 'asd', excludedValidation: 'asd'}, function (valid) {\n        t.same(valid, true, 'Validate did not work as expected.');\n      \n        val('UserConnectMockup', {name: 'a', excludedProperty: '', excludedValidation: 'a'}, function (valid, errors) {\n          t.same(errors, {name: ['length'], excludedProperty: ['notEmpty'], excludedValidation: ['length']}, 'Validate did not work as expected.');\n          t.done();\n        });\n      });\n    });\n  },\n  \n  connectOptions: function (t) {\n    \n    setup(t, 1, {url: './nohm.js', namespace: 'hurgel'}, function (sandbox) {\n      t.ok(sandbox.hurgel, 'Namespace option not successful');\n      t.done();\n    });\n    \n  },\n  \n  connectExtraFiles: function (t) {\n    \n    setup(t, 1, {extraFiles: __dirname+'/custom_validations2.js'}, function (sandbox) {\n      sandbox.nohmValidations.validate('UserConnectMockup', {\n        customValidationFile: 'NOPE',\n        customValidationFileTimesTwo: 'NOPE'\n        }, function (valid, errors) {\n          t.same(errors, {\n              customValidationFile: ['customValidationFile'],\n              customValidationFileTimesTwo: ['customValidationFileTimesTwo']\n            }, 'Validate did not work as expected.');\n          t.done();\n        });\n    });\n    \n  },\n  \n  connectExceptions: function (t) {\n    \n    setup(t, 2, {exclusions: {\n      UserConnectMockup: {\n        excludedValidation: [1],\n        excludedProperty: true\n      },\n      ExcludedConnectMockup: true\n    }}, function (sandbox) {\n      var validate = sandbox.nohmValidations.validate;\n      validate('UserConnectMockup', {\n        excludedValidation: 'a',\n        excludedProperty: ''\n      }, function (valid) {\n        t.same(valid, true, 'Validate did not work as expected with exclusions.');\n    \n        try {\n          validate('ExcludedConnectMockup', {\n            name: ''\n          }, function () {\n            t.ok(false, 'Validate should have thrown an error about an invalid modelname');\n            t.done();\n          });\n        } catch (e) {\n          t.same(e.message, 'Invalid modelName passed to nohm or model was not properly exported.', 'Validate did not work as expected with exclusions.');\n        }\n        t.done();\n      });\n    });  \n    \n  },\n  \n  connectValidateEmpty: function (t) {\n    \n    setup(t, 1, undefined, function (sandbox) {\n      var val = sandbox.nohmValidations.validate;\n      val('UserConnectMockup', {excludedProperty: 'asd', excludedValidation: 'asd'}, function (valid) {\n        t.same(valid, true, 'Validate did not work as expected.');\n        t.done();\n      });\n    });\n  }\n};"]],"start1":0,"start2":0,"length1":0,"length2":6268}]],"length":6268}
{"contributors":[],"silentsave":false,"ts":1390631918343,"patch":[[{"diffs":[[0,"    "],[-1,"write"],[1,"set"],[0,"Head"],[1,"er"],[0,": fu"]],"start1":1568,"start2":1568,"length1":17,"length2":17}]],"length":6268,"saved":false}
{"ts":1390631984897,"patch":[[{"diffs":[[0,"on ("],[-1,"status, headers) {\n      t.ok(headers['Content-Length"],[1,"name, value) {\n      Content-Length\n      t.ok(headers['"],[0,"'] >"]],"start1":1589,"start2":1589,"length1":61,"length2":64}]],"length":6271,"saved":false}
{"ts":1390631985828,"patch":[[{"diffs":[[0,"{\n      "],[1,"if ("],[0,"Content-"]],"start1":1606,"start2":1606,"length1":16,"length2":20}]],"length":6275,"saved":false}
{"ts":1390631987580,"patch":[[{"diffs":[[0,"    if ("],[1,"name =="],[0,"Content-"]],"start1":1610,"start2":1610,"length1":16,"length2":23}]],"length":6282,"saved":false}
{"ts":1390631989355,"patch":[[{"diffs":[[0,"(name =="],[1,"= \""],[0,"Content-"]],"start1":1617,"start2":1617,"length1":16,"length2":19}]],"length":6285,"saved":false}
{"ts":1390631990181,"patch":[[{"diffs":[[0,"t-Length"],[1,"\""],[0,"\n      t"]],"start1":1634,"start2":1634,"length1":16,"length2":17}]],"length":6286,"saved":false}
{"ts":1390631991004,"patch":[[{"diffs":[[0,"-Length\""],[1,")"],[0,"\n      t"]],"start1":1635,"start2":1635,"length1":16,"length2":17}]],"length":6287,"saved":false}
{"ts":1390631993426,"patch":[[{"diffs":[[0,"Length\")"],[1," [{}]"],[0,"\n      t"]],"start1":1636,"start2":1636,"length1":16,"length2":21}]],"length":6292,"saved":false}
{"ts":1390631994198,"patch":[[{"diffs":[[0,"h\") "],[-1,"[{}]"],[0,"\n   "]],"start1":1641,"start2":1641,"length1":12,"length2":8}]],"length":6288,"saved":false}
{"ts":1390631995378,"patch":[[{"diffs":[[0,"ength\") "],[1,"{"],[0,"\n      t"]],"start1":1637,"start2":1637,"length1":16,"length2":17}]],"length":6289,"saved":false}
{"ts":1390631996300,"patch":[[{"diffs":[[0,"-Length\") {\n"],[1,"        \n      }\n"],[0,"      t.ok(h"]],"start1":1635,"start2":1635,"length1":24,"length2":41}]],"length":6306,"saved":false}
{"ts":1390631997899,"patch":[[{"diffs":[[0,"        "],[-1,"\n      }\n      "],[0,"t.ok(hea"]],"start1":1647,"start2":1647,"length1":31,"length2":16},{"diffs":[[0,"th was 0');\n"],[1,"        \n      }\n"],[0,"      length"]],"start1":1697,"start2":1697,"length1":24,"length2":41}]],"length":6308,"saved":false}
{"ts":1390631999944,"patch":[[{"diffs":[[0,"as 0');\n"],[-1,"        \n"],[0,"      }\n"]],"start1":1701,"start2":1701,"length1":25,"length2":16}]],"length":6299,"saved":false}
{"ts":1390632003383,"patch":[[{"diffs":[[0,".ok("],[-1,"headers[''] > 0"],[1,"value "],[0,", 'H"]],"start1":1656,"start2":1656,"length1":23,"length2":14}]],"length":6290,"saved":false}
{"ts":1390632005085,"patch":[[{"diffs":[[0,"k(value "],[1,"> 0"],[0,", 'Heade"]],"start1":1658,"start2":1658,"length1":16,"length2":19}]],"length":6293,"saved":false}
{"ts":1390632022547,"patch":[[{"diffs":[[0,"as 0');\n"],[-1,"      }\n"],[0,"      le"]],"start1":1695,"start2":1695,"length1":24,"length2":16},{"diffs":[[0,"ngth'];\n"],[1,"      }\n"],[0,"      he"]],"start1":1737,"start2":1737,"length1":16,"length2":24}]],"length":6293,"saved":false}
{"ts":1390632024171,"patch":[[{"diffs":[[0,";\n      "],[1,"  "],[0,"length ="]],"start1":1701,"start2":1701,"length1":16,"length2":18}]],"length":6295,"saved":false}
{"ts":1390632026335,"patch":[[{"diffs":[[0,"h = "],[-1,"headers['Content-Length'];"],[1,"vakl"],[0,"\n   "]],"start1":1716,"start2":1716,"length1":34,"length2":12}]],"length":6273,"saved":false}
{"ts":1390632027756,"patch":[[{"diffs":[[0,"= va"],[-1,"k"],[0,"l"],[1,"ue"],[0,"\n   "]],"start1":1718,"start2":1718,"length1":10,"length2":11}]],"length":6274,"saved":false}
{"ts":1390632028866,"patch":[[{"diffs":[[0," = value"],[1,";"],[0,"\n      }"]],"start1":1717,"start2":1717,"length1":16,"length2":17}]],"length":6275,"saved":false}
